name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Frontend - Install dependencies and build
        run: |
          npm ci
          npm run build
        working-directory: ./frontend/react-app

      - name: Backend - Install dependencies
        run: npm ci
        working-directory: ./backend/graphql-server

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build and push GraphQL server image to Amazon ECR
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 339712726852.dkr.ecr.us-east-1.amazonaws.com
          docker build -t 339712726852.dkr.ecr.us-east-1.amazonaws.com/graphql:latest ./backend/graphql-server
          docker push 339712726852.dkr.ecr.us-east-1.amazonaws.com/graphql:latest

      - name: Deploy with Serverless
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          npm install -g serverless
          npm install serverless-dotenv-plugin
          serverless deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy Frontend to S3
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: aws s3 sync frontend/react-app/build/ s3://frontend-s3-react-dev --delete

      - name: Update ECS service
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: aws ecs update-service --cluster graphql-cluster --service graphql-service --force-new-deployment
